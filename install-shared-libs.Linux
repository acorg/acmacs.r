#! /usr/bin/python

import sys, os, subprocess, shutil

# ----------------------------------------------------------------------

AD_LIB_DIR = os.path.join(os.environ["ACMACSD_ROOT"], "lib")

LIB_SOURCE = {
    "libacmacsbase.so.1": AD_LIB_DIR,
    "libacmacschart.so.2": AD_LIB_DIR,
    "liblocationdb.so.1": AD_LIB_DIR,
    }

# ----------------------------------------------------------------------

def main(target_package_dir, *libraries):
    to_process = set(libraries)
    processed = set()
    while to_process:
        library = to_process.pop()
        processed.add(library)
        for linked_to in subprocess.check_output(["/usr/bin/ldd", library]).strip().split("\n"):
            if "linux-vdso.so.1 =>" not in linked_to and "=> /usr/lib/" not in linked_to and "=> /lib/" not in linked_to and "/lib64/" not in linked_to:
                name = linked_to.split("=>")[0].strip()
                target_lib = os.path.join(target_package_dir, "libs", name)
                if target_lib not in processed and target_lib not in to_process:
                    shutil.copy(os.path.join(LIB_SOURCE[name], name), target_lib)
                    to_process.add(target_lib)
    subprocess.check_call(["ls", "-l", os.path.join(target_package_dir, "libs")])

# ----------------------------------------------------------------------

try:
    if sys.platform != 'linux2':
        raise RuntimeError("this script cannot be run on " + sys.platform)
    if len(sys.argv) < 3:
        raise RuntimeError("Usage: %s <target_package_dir> <library> ..." % sys.argv[0])
    main(*sys.argv[1:])
except Exception, err:
    print >>sys.stderr, "ERROR:", err

# ----------------------------------------------------------------------
